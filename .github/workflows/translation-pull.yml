name: Translations - Pull from crowdin to github

on:
  issue_comment:
    types: [created]

jobs:
  params:
    name: Check if commenter requested Crowdin synchronization
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.match }}
      issue_number: ${{ github.event.issue.number }}
    steps:
      - id: check
        run: |
          if [[ "${{ github.event.comment.body }}" =~ ^/pull ]]; then
            echo "::set-output name=match::true"
          fi

  sync-translations:
    needs: params
    if: needs.params.outputs.should_run == 'true'

    name: "Sync Translations for #${{ needs.params.outputs.issue_number }}"
    runs-on: ubuntu-latest

    steps:
      - name: View the github context
        run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          issueNumber: ${{ needs.params.outputs.issue_number }}


      - name: Setup / Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Setup / Crowdin CLI
        run: npm install -g @crowdin/cli

      - name: Setup / Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Env vars update
        run: |
          echo "language=ru" >> $GITHUB_ENV
          echo "issueNumber=${{ needs.params.outputs.issue_number }}" >> $GITHUB_ENV
          echo "translationBranch=${{ format('translation-{0}-{1}', needs.params.outputs.issue_number, 'ru') }}" >> $GITHUB_ENV
          echo "translationBranchPreview=${{ format('translation-{0}-{1}-draft', needs.params.outputs.issue_number, 'ru') }}" >> $GITHUB_ENV

      - name: Setup / Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ env.translationBranch }}

      - name: Pull translations
        env:
          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}
        run: >
          crowdin pull translations
            -c crowdin-oss.yml
            -b ${{ env.translationBranch }}
            -l ${{ env.language }}
            --all
            --skip-untranslated-files --export-only-approved

      - name: Make a git commit
        run: |
          git add i18n/
          git commit -m "chore: update ${{ env.language }} translations"
          git push -u origin ${{ env.translationBranch }}
