name: Translations - Pull from crowdin to github

on:
  issue_comment:
    types: [created]

jobs:
  check-comment:
    name: Check if commenter requested Crowdin synchronization
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.match }}
    steps:
      - id: check
        run: |
          if [[ "${{ github.event.comment.body }}" =~ ^/pull ]]; then
            echo "::set-output name=match::true"
          fi

  sync-translations:
    needs: check-comment
    if: needs.check-comment.outputs.should_run == 'true'

    name: Sync Translations for release-candidate-${{ matrix.lang }}
    runs-on: ubuntu-latest

    steps:
      - name: View the github context
        run: echo "$GITHUB_CONTEXT"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

#      - name: Setup env vars
#        env:
#          crowdinBranch: ${{ inputs.language && format('translation-{0}', inputs.language) || 'main' }}
#        run: >
#          echo "crowdinBranch=$crowdinBranch" >> $GITHUB_ENV
#
#      - name: Checkout code
#        uses: actions/checkout@v3
#        with:
#          fetch-depth: 0
#
#      - name: Setup Node.js
#        uses: actions/setup-node@v3
#        with:
#          node-version: '20'
#
#      - name: Install Crowdin CLI
#        run: npm install -g @crowdin/cli
#
#      - name: Configure Git
#        run: |
#          git config user.name "github-actions[bot]"
#          git config user.email "github-actions[bot]@users.noreply.github.com"
#
#      - name: Pull translations
#        env:
#          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}
#        run: >
#          crowdin pull translations
#            -c crowdin-oss.yml -b ${{ env.crowdinBranch }}
#            -l ${{ inputs.language }}
#            --all
#            ${{ inputs.onlyTranslated && '--skip-untranslated-files --export-only-approved' || ''}
#
#      - name: Make a git commit
#        run: |
#          git add i18n/${{ inputs.language }}
#          git commit -m "chore: update ${{ inputs.language }} translations"
#          git push -u origin l10n-release-candidate-${{ matrix.lang }} || true
#
#
#      - name: Commit and push translations
#        env:
#          CROWDIN_PERSONAL_TOKEN: ${{ secrets.CROWDIN_PERSONAL_TOKEN }}
#          GH_TOKEN: ${{ secrets.GH_TOKEN }}
#        run: |
#          git stash --include-untracked
#          git checkout -b l10n-release-candidate-${{ matrix.lang }}
#          git pull --rebase origin l10n-release-candidate-${{ matrix.lang }} || true
#          crowdin download --export-only-approved --branch main --config crowdin-oss.yml --language=${{ matrix.lang }}
#          git add i18n/${{ matrix.lang }}
#          git commit -m "chore: update ${{ matrix.lang }} translations"
#          git push -u origin l10n-release-candidate-${{ matrix.lang }} || true
#          gh pr create -B release-candidate-${{ matrix.lang }} -H l10n-release-candidate-${{ matrix.lang }} --title "chore: update `${{ matrix.lang }}` translations" --body 'This automated PR updates only the fully translated `${{ matrix.lang }}` files.' || true
#
